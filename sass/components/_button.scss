$eve-button-types: (
    primary: $eve-primary-color-blue,
    success: $eve-secondary-color-green,
    warning: $eve-secondary-color-orange,
    danger: $eve-secondary-color-red
) !default;
$eve-button-height: 36px !default;
$eve-button-border-radius: $eve-button-height / 2 !default;

@mixin getEveButton() {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: $eve-button-height;
    padding: 0 $eve-spacing-small;
    border: 0;
    text-decoration: none;
    color: $eve-primary-color-white;
    cursor: pointer;
    border-radius: $eve-button-border-radius;
    font-size: $eve-font-size-normal;
    outline: none;
    user-select: none;
    box-sizing: border-box;
    min-width: 72px;
    vertical-align: top;
    appearance: none;
}

@mixin getEveButtonOutline($eveButtonColor) {
    color: $eveButtonColor;
    border: 1px solid $eveButtonColor;
    background: transparent;
}

@mixin getEveButtonHover($eveButtonType) {
    @if $eveButtonType == 'primary' {
        background: $eve-extended-color-blue-700;
    } @else if $eveButtonType == 'success' {
        background: $eve-extended-color-green-700;
    } @else if $eveButtonType == 'warning' {
        background: $eve-extended-color-orange-700;
    } @else if $eveButtonType == 'danger' {
        background: $eve-extended-color-red-700;
    }
}

@mixin getEveButtonActive($eveButtonType) {
    @if $eveButtonType == 'primary' {
        background: $eve-extended-color-blue-800;
    } @else if $eveButtonType == 'success' {
        background: $eve-extended-color-green-800;
    } @else if $eveButtonType == 'warning' {
        background: $eve-extended-color-orange-800;
    } @else if $eveButtonType == 'danger' {
        background: $eve-extended-color-red-800;
    }
}

@mixin getEveButtonOutlineHover($eveButtonType) {
    @if $eveButtonType == 'primary' {
        background: $eve-neutral-color-50;
        border-color: $eve-neutral-color-50;
    } @else if $eveButtonType == 'success' {
        background: $eve-neutral-color-50;
        border-color: $eve-neutral-color-50;
    } @else if $eveButtonType == 'warning' {
        background: $eve-neutral-color-50;
        border-color: $eve-neutral-color-50;
    } @else if $eveButtonType == 'danger' {
        background: $eve-neutral-color-50;
        border-color: $eve-neutral-color-50;
    }
}

@mixin getEveButtonOutlineActive($eveButtonType) {
    @if $eveButtonType == 'primary' {
        background: $eve-neutral-color-100;
        border-color: $eve-neutral-color-100;
    } @else if $eveButtonType == 'success' {
        background: $eve-neutral-color-100;
        border-color: $eve-neutral-color-100;
    } @else if $eveButtonType == 'warning' {
        background: $eve-neutral-color-100;
        border-color: $eve-neutral-color-100;
    } @else if $eveButtonType == 'danger' {
        background: $eve-neutral-color-100;
        border-color: $eve-neutral-color-100;
    }
}

@mixin getEveButtonText($eveButtonColor) {
    text-transform: uppercase;
    background: transparent;
    border: 0;
    color: $eveButtonColor;
    font-weight: 600;
}

@mixin getEveButtonTextHover($eveButtonType) {
    @if $eveButtonType == 'primary' {
        background: $eve-neutral-color-50;
    } @else if $eveButtonType == 'success' {
        background: $eve-neutral-color-50;
    } @else if $eveButtonType == 'warning' {
        background: $eve-neutral-color-50;
    } @else if $eveButtonType == 'danger' {
        background: $eve-neutral-color-50;
    }
}

@mixin getEveButtonTextActive($eveButtonType) {
    @if $eveButtonType == 'primary' {
        background: $eve-neutral-color-100;
    } @else if $eveButtonType == 'success' {
        background: $eve-neutral-color-100;
    } @else if $eveButtonType == 'warning' {
        background: $eve-neutral-color-100;
    } @else if $eveButtonType == 'danger' {
        background: $eve-neutral-color-100;
    }
}

@mixin getEveButtonIcon() {
    padding: 0;
    width: $eve-button-height;
    height: $eve-button-height;
    border-radius: 100%;
    color: $eve-neutral-color-200;
    background: transparent;
    min-width: initial;
}

@mixin getEveButtonIconHover($eveButtonColor) {
    background: $eve-neutral-color-50;
    color: $eveButtonColor;
}

@mixin getEveButtonIconActive($eveButtonColor) {
    background: $eve-neutral-color-100;
    color: $eveButtonColor;
}

.eve-button {
    @include getEveButton();

    i {
        font-size: 18px;
        margin-right: $eve-spacing-x-tiny;
    }

    @each $eveButtonType in map-keys($eve-button-types) {
        &.eve-button-#{$eveButtonType} {
            background: map-get($eve-button-types, $eveButtonType);

            &:hover {
                @include getEveButtonHover($eveButtonType);
            }

            &:active {
                @include getEveButtonActive($eveButtonType);
            }

            &.eve-button-outline {
                @include getEveButtonOutline(map-get($eve-button-types, $eveButtonType));

                &:hover {
                    @include getEveButtonOutlineHover($eveButtonType);
                }

                &:active {
                    @include getEveButtonOutlineActive($eveButtonType);
                }
            }

            &.eve-button-text {
                @include getEveButtonText(map-get($eve-button-types, $eveButtonType));

                &:hover {
                    @include getEveButtonTextHover($eveButtonType);
                }

                &:active {
                    @include getEveButtonTextActive($eveButtonType);
                }
            }

            &.eve-button-icon {
                @include getEveButtonIcon();

                i {
                    margin-right: 0;
                }

                &:hover {
                    @include getEveButtonIconHover(map-get($eve-button-types, $eveButtonType));
                }

                &:active {
                    @include getEveButtonIconActive(map-get($eve-button-types, $eveButtonType));
                }
            }
        }
    }

    &.eve-button-disable {
        pointer-events: none;
        background: $eve-neutral-color-200;

        &.eve-button-outline {
            background: $eve-neutral-color-200;
            border-color: $eve-neutral-color-200;
            color: $eve-primary-color-white;
        }

        &.eve-button-text {
            background: transparent;
            color: $eve-neutral-color-200;
        }
    }
}

.eve-button-group {
    display: inline-flex;

    .eve-button {
        border-radius: 0;
    }

    .eve-button:first-child {
        border-radius: $eve-button-border-radius 0 0 $eve-button-border-radius;
    }

    .eve-button:last-child {
        border-radius: 0 $eve-button-border-radius $eve-button-border-radius 0;
    }
}
