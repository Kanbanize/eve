// sass-lint:disable no-important
$eve-text-transforms: (
    lowercase,
    uppercase,
    capitalize
);
$eve-text-alignments: (
    left,
    center,
    right,
    justify
);
$eve-text-sizes: (
    small: $eve-font-small,
    normal: $eve-font-normal,
    large: $eve-font-large,
);
$eve-text-colors: (
    primary: $eve-color-primary,
    danger: $eve-color-danger,
    warning: $eve-color-warning,
    success: $eve-color-success,
    muted: $eve-color-darkest-silver
);
$eve-text-weights: (
    light: 300,
    // normal: 400,
    semibold: 600,
    bold: 700
);

@each $eve-text-transform in $eve-text-transforms {
    .eve-text-#{$eve-text-transform} {
        text-transform: $eve-text-transform !important;
    }
}

@each $eve-text-alignment in $eve-text-alignments {
    .eve-text-#{$eve-text-alignment} {
        text-align: $eve-text-alignment !important;
    }
}

.eve-text-truncate {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    word-wrap: normal;
}

@each $eve-text-size in map-keys($eve-text-sizes) {
    .eve-text-#{$eve-text-size} {
        font-size: map-get($eve-text-sizes, $eve-text-size);
    }
}

@each $eve-text-color in map-keys($eve-text-colors) {
    .eve-text-#{$eve-text-color} {
        color: map-get($eve-text-colors, $eve-text-color) !important;
    }
}

@each $eve-text-weight in map-keys($eve-text-weights) {
    .eve-text-#{$eve-text-weight} {
        font-weight: map-get($eve-text-weights, $eve-text-weight);
    }
}

.eve-text-unselectable {
    user-select: none !important;
}
