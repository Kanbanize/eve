$eve-select-height: 36px;
$eve-select-arrow-size: 6px;
$eve-select-arrow-border-width: 1px;
$eve-select-sizes: (
    small: 28px,
    normal: 36px,
    large: 48px
) !default;
$eve-select-paddings: (
    small: $eve-spacing-tiny,
    normal: $eve-spacing-small,
    large: $eve-spacing-normal
) !default;
$eve-select-font-sizes: (
    small: $eve-font-tiny,
    normal: $eve-font-small,
    large: $eve-font-normal
) !default;

.eve-select {
    display: block;
    position: relative;
    max-width: 100%;
    width: 100%;

    &::after {
        content: '';
        position: absolute;
        border: $eve-select-arrow-border-width solid $eve-color-grey-black;
        border-right: 0;
        border-top: 0;
        transform: rotate(-45deg);
        width: $eve-select-arrow-size;
        height: $eve-select-arrow-size;
        top: calc(50% - #{$eve-select-arrow-size / 2 + $eve-select-arrow-border-width});
        pointer-events: none;
        box-sizing: border-box;
    }

    select {
        -webkit-appearance: none; // sass-lint:disable-line no-vendor-prefixes
        -moz-appearance: none; // sass-lint:disable-line no-vendor-prefixes
        outline: none;
        font-family: inherit;
        border-radius: 0;
        background: $eve-color-white;
        width: 100%;
        color: $eve-color-grey-black;
        cursor: pointer;
        border: 1px solid $eve-color-dark-silver;

        &:focus {
            border-color: $eve-color-blue;
        }
    }

    @each $eve-select-size in map-keys($eve-select-sizes) {
        $size: map-get($eve-select-sizes, $eve-select-size);
        $padding: map-get($eve-select-paddings, $eve-select-size);
        $font-size: map-get($eve-select-font-sizes, $eve-select-size);

        @if $eve-select-size == 'normal' {
            &::after {
                right: $padding;
            }

            select {
                height: $size;
                line-height: $size;
                padding: 0 ($padding * 2) 0 $padding;
                font-size: $font-size;
            }
        } @else {
            &.is-#{$eve-select-size} {
                &::after {
                    right: $padding;
                }

                select {
                    height: $size;
                    line-height: $size;
                    padding: 0 ($padding * 2) 0 $padding;
                    font-size: $font-size;
                }
            }
        }

        &.is-rounded {
            select {
                border-radius: $size / 2;
            }
        }
    }

    &.is-disabled {
        &::after {
            border-color: $eve-color-darkest-silver;
        }

        select {
            background: $eve-color-dark-silver;
            border-color: $eve-color-dark-silver;
            color: $eve-color-darkest-silver;
            pointer-events: none;
        }
    }
}

.eve-select-field {
    position: relative;
    display: flex;
    align-items: center;

    @each $eve-select-size in map-keys($eve-select-sizes) {
        $size: map-get($eve-select-sizes, $eve-select-size);
        $padding: map-get($eve-select-paddings, $eve-select-size);

        @if $eve-select-size == 'normal' {
            &.has-icon {
                i,
                svg {
                    left: $padding;
                }

                i {
                    font-size: $size / 2;
                }

                svg {
                    width: $size / 2;
                    height: $size / 2;
                }

                .eve-select {
                    select {
                        padding-left: ($size / 2) + ($padding * 2) - ($padding / 2);
                    }
                }
            }
        } @else {
            &.is-#{$eve-select-size} {
                &.has-icon {
                    i,
                    svg {
                        left: $padding;
                    }

                    i {
                        font-size: $size / 2;
                    }

                    svg {
                        width: $size / 2;
                        height: $size / 2;
                    }

                    .eve-select {
                        select {
                            padding-left: ($size / 2) + ($padding * 2) - ($padding / 2);
                        }
                    }
                }
            }
        }
    }

    &.has-icon {
        i,
        svg {
            position: absolute;
        }

        i {
            color: $eve-color-dark-silver;
        }

        svg {
            fill: $eve-color-dark-silver;
        }
    }
}
