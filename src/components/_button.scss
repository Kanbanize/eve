$eve-button-colors: (
    primary: $eve-color-blue,
    success: $eve-color-green,
    warning: $eve-color-orange,
    danger: $eve-color-red
) !default;
$eve-button-height: 36px !default;
$eve-button-border-radius: $eve-button-height / 2 !default;
$eve-button-min-width: 94px !default;
$eve-button-icon-size: 18px !default;
$eve-button-icon-border-radius: 50% !default;
$eve-button-load-progress-border-radius: 50% !default;
$eve-button-load-progress-border-width: 2px !default;
$eve-button-load-progress-size: 20px !default;
$eve-button-outline-box-shadow-spread: 1px !default;
$eve-button-sizes: (
    small: 28px,
    large: 48px
) !default;
$eve-button-paddings: (
    small: $eve-spacing-tiny,
    large: $eve-spacing-normal
) !default;
$eve-button-min-widths: (
    small: 56px
) !default;

.eve-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: $eve-button-height;
    line-height: $eve-button-height;
    padding: 0 $eve-spacing-small;
    border: 0;
    text-decoration: none;
    color: $eve-color-white;
    cursor: pointer;
    border-radius: $eve-button-border-radius;
    font-size: $eve-font-normal;
    outline: none;
    user-select: none;
    vertical-align: top;
    font-family: inherit;
    min-width: $eve-button-min-width;

    &:hover,
    &:active,
    &:focus {
        color: $eve-color-white;
    }

    &:focus {
        text-decoration: none;
    }

    @each $eve-button-size in map-keys($eve-button-sizes) {
        $size: map-get($eve-button-sizes, $eve-button-size);

        &.eve-button-#{$eve-button-size} {
            height: $size;
            line-height: $size;
            border-radius: $size / 2;

            @if map-has-key($eve-button-paddings, $eve-button-size) {
                padding: 0 map-get($eve-button-paddings, $eve-button-size);
            }

            @if map-has-key($eve-button-min-widths, $eve-button-size) {
                min-width: map-get($eve-button-min-widths, $eve-button-size);
            }
        }
    }

    @each $eve-button-color in map-keys($eve-button-colors) {
        $color: map-get($eve-button-colors, $eve-button-color);
        $hover-color: darken($color, 5);
        $active-color: darken($color, 10);

        // Default Buttons
        &.eve-button-#{$eve-button-color} {
            background: $color;

            &:hover {
                background: $hover-color;
            }

            &:active {
                background: $active-color;
            }

            // Outline Buttons
            &.eve-button-outline {
                color: $color;
                box-shadow: inset 0 0 0 $eve-button-outline-box-shadow-spread $color;

                &:hover {
                    background: rgba($color, .1); // sass-lint:disable-line no-color-literals
                }

                &:active {
                    background: rgba($color, .2); // sass-lint:disable-line no-color-literals
                }
            }

            // Invert Buttons
            &.eve-button-invert {
                color: $color;
                background: transparent;

                &:hover {
                    background: rgba($color, .1); // sass-lint:disable-line no-color-literals
                }

                &:active {
                    background: rgba($color, .2); // sass-lint:disable-line no-color-literals
                }
            }

            // Text Buttons
            &.eve-button-text {
                color: $color;
                background: transparent;

                &:hover {
                    color: $hover-color;
                }

                &:active {
                    color: $active-color;
                }
            }

            // Icon Buttons
            &.eve-button-icon {
                i {
                    margin-right: 0;
                }

                &:hover {
                    background: rgba($color, .1); // sass-lint:disable-line no-color-literals
                    color: $color;
                }

                &:active {
                    background: rgba($color, .2); // sass-lint:disable-line no-color-literals
                    color: $color;
                }
            }
        }
    }

    i {
        font-size: $eve-button-icon-size;
        margin-right: $eve-spacing-x-tiny;
    }

    &.eve-button-outline {
        background: $eve-color-white;
    }

    &.eve-button-invert,
    &.eve-button-text {
        text-transform: uppercase;
        border: 0;
        font-weight: bold;
    }

    &.eve-button-icon {
        padding: 0;
        width: $eve-button-height;
        height: $eve-button-height;
        border-radius: $eve-button-icon-border-radius;
        background: transparent;
        min-width: $eve-button-height;
        color: $eve-color-darker-silver;
    }

    &.eve-button-block {
        width: 100%;
    }

    &.eve-button-load {
        color: transparent;
        position: relative;
        pointer-events: none;

        &::after {
            content: '';
            border-radius: $eve-button-load-progress-border-radius;
            border: $eve-button-load-progress-border-width solid transparent;
            border-top-color: $eve-color-white;
            border-right-color: $eve-color-white;
            position: absolute;
            top: calc(50% - #{$eve-button-load-progress-size / 2});
            left: calc(50% - #{$eve-button-load-progress-size / 2});
            transform: translate(-50%, -50%);
            width: $eve-button-load-progress-size;
            height: $eve-button-load-progress-size;
            animation-name: eveButtonProgress;
            animation-fill-mode: forwards;
            animation-iteration-count: infinite;
            animation-duration: .5s;
            animation-timing-function: linear;
        }

        @keyframes eveButtonProgress {
            from {
                transform: rotate(0);
            }

            to {
                transform: rotate(360deg);
            }
        }
    }

    &.eve-button-file {
        position: relative;
        overflow: hidden;

        input {
            &[type='file'] {
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                opacity: 0;
                width: 100%;
                height: 100%;
                cursor: inherit;
                border-radius: inherit;
                display: block;
            }
        }
    }

    &.eve-button-disable,
    &:disabled {
        pointer-events: none;
        background: $eve-color-darker-silver;

        &.eve-button-outline {
            background: $eve-color-darker-silver;
            color: $eve-color-white;
            box-shadow: none;
        }

        &.eve-button-invert,
        &.eve-button-text,
        &.eve-button-icon {
            background: transparent;
            color: $eve-color-darker-silver;
        }
    }
}

.eve-button-group {
    display: flex;

    .eve-button {
        &:not(:first-child) {
            margin-left: $eve-spacing-small;
        }
    }

    &.eve-button-group-left {
        justify-content: flex-start;
    }

    &.eve-button-group-center {
        justify-content: center;
    }

    &.eve-button-group-right {
        justify-content: flex-end;
    }
}

.eve-button-addons {
    display: flex;

    .eve-button {
        &:not(.eve-button-outline) {
            &:not(:last-child) {
                border-right: 1px solid $eve-color-white;
            }
        }

        &:not(:first-child) {
            &:not(:last-child) {
                border-radius: 0;
            }
        }

        &:first-child {
            &:not(:last-child) {
                border-radius: $eve-button-border-radius 0 0 $eve-button-border-radius;
            }
        }

        &:last-child {
            &:not(:first-child) {
                border-radius: 0 $eve-button-border-radius $eve-button-border-radius 0;
            }
        }
    }
}
