$eve-avatar-sizes: (
    x-tiny: 16px,
    tiny: 24px,
    small: 28px,
    normal: 32px,
    large: 40px,
    x-large: 96px
);

.eve-avatar {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    vertical-align: middle;
    color: $eve-color-light;
    position: relative;

    &[data-initial] {
        background: $eve-color-primary;

        &::before {
            content: attr(data-initial);
            font-weight: bold;
        }
    }

    img {
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
        object-fit: cover;
        object-position: center;
        position: absolute;
        left: 0;
        top: 0;
        border-radius: inherit;
        width: inherit;
        height: inherit;
    }

    @each $eve-avatar-size in map-keys($eve-avatar-sizes) {
        $size: map-get($eve-avatar-sizes, $eve-avatar-size);

        &.is-#{$eve-avatar-size} {
            width: $size;
            height: $size;

            &[data-initial] {
                &::before {
                    @if $eve-avatar-size == 'x-tiny' {
                        font-size: $eve-font-x-tiny;
                    } @else if $eve-avatar-size == 'large' {
                        font-size: $eve-font-normal;
                    } @else if $eve-avatar-size == 'x-large' {
                        font-size: $eve-font-x-large;
                    } @else {
                        font-size: $eve-font-tiny;
                    }
                }
            }

            &.is-online,
            &.is-busy,
            &.is-away,
            &.is-offline {
                &::after {
                    content: '';
                    display: block;
                    height: $size / 4;
                    width: $size / 4;
                    border-radius: 50%;
                    position: absolute;
                    bottom: 0;
                    right: 0;

                    @if $eve-avatar-size == 'x-tiny' or $eve-avatar-size == 'tiny' {
                        box-shadow: 0 0 0 1px $eve-color-light;
                    } @else {
                        box-shadow: 0 0 0 2px $eve-color-light;
                    }
                }
            }

            &.is-online {
                &::after {
                    background: $eve-color-success;
                }
            }

            &.is-busy {
                &::after {
                    background: $eve-color-danger;
                }
            }

            &.is-away {
                &::after {
                    background: $eve-color-warning;
                }
            }

            &.is-offline {
                &::after {
                    background: $eve-color-dark-silver;
                }
            }
        }
    }
}

.eve-avatars {
    display: flex;

    .eve-avatar {
        box-shadow: 0 0 0 2px $eve-color-light;

        &:not(:first-child) {
            margin-left: -#{$eve-spacing-x-tiny};
        }
    }
}

.eve-profile {
    display: flex;
    align-items: center;

    .eve-avatar {
        margin-right: $eve-spacing-tiny;
    }
}

.eve-profiles {
    display: flex;
    flex-direction: column;

    .eve-profile {
        &:not(:last-child) {
            margin-bottom: $eve-spacing-tiny;
        }
    }
}
