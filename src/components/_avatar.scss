$eve-avatar-sizes: (
    tiny: 1.5rem,
    small: 2rem,
    normal: 3rem,
    large: 4rem,
    huge: 6rem
) !default;
$eve-avatar-border-radius: 50% !default;

.eve-avatar {
    border-radius: $eve-avatar-border-radius;
    color: $eve-color-light;
    display: inline-block;
    height: map-get($eve-avatar-sizes, 'normal');
    line-height: map-get($eve-avatar-sizes, 'normal');
    position: relative;
    text-align: center;
    width: map-get($eve-avatar-sizes, 'normal');

    &[data-initial] {
        background: $eve-color-primary;

        &::before {
            content: attr(data-initial);
            font-size: map-get($eve-avatar-sizes, 'normal') / 2;
        }
    }

    img {
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        border-radius: inherit;
        height: inherit;
        left: 0;
        object-fit: cover;
        object-position: center;
        position: absolute;
        top: 0;
        width: inherit;
    }

    &.is-online,
    &.is-busy,
    &.is-away,
    &.is-offline {
        &::after {
            border-radius: 50%;
            bottom: 0;
            box-shadow: 0 0 0 1px $eve-color-light;
            content: '';
            display: block;
            height: map-get($eve-avatar-sizes, 'normal') / 4;
            position: absolute;
            right: 0;
            width: map-get($eve-avatar-sizes, 'normal') / 4;
        }
    }

    @each $eve-avatar-size in map-keys($eve-avatar-sizes) {
        @if $eve-avatar-size != 'normal' {
            $size: map-get($eve-avatar-sizes, $eve-avatar-size);

            &.is-#{$eve-avatar-size} {
                height: $size;
                line-height: $size;
                width: $size;

                &[data-initial] {
                    &::before {
                        font-size: $size / 2;
                    }
                }

                &.is-online,
                &.is-busy,
                &.is-away,
                &.is-offline {
                    &::after {
                        height: $size / 4;
                        width: $size / 4;
                    }
                }
            }
        }
    }

    &.is-online {
        &::after {
            background: $eve-color-success;
        }
    }

    &.is-busy {
        &::after {
            background: $eve-color-danger;
        }
    }

    &.is-away {
        &::after {
            background: $eve-color-warning;
        }
    }

    &.is-offline {
        &::after {
            background: $eve-color-dark-silver;
        }
    }
}

.eve-avatars {
    display: flex;

    .eve-avatar {
        box-shadow: 0 0 0 1px $eve-color-light;

        &:not(:first-child) {
            margin-left: -#{.25rem};
        }
    }
}

.eve-profile {
    align-items: center;
    display: flex;
    font-size: $eve-font-normal;

    .eve-avatar {
        flex-shrink: 0;
        margin-right: $eve-spacing-tiny;
    }

    i,
    svg {
        margin-left: $eve-spacing-tiny;
    }

    svg {
        fill: $eve-color-dark;
        height: 1rem;
        width: 1rem;
    }
}

.eve-profiles {
    display: flex;
    flex-direction: column;

    .eve-profile {
        &:not(:last-child) {
            margin-bottom: $eve-spacing-tiny;
        }
    }
}
