$eve-input-colors: (
    primary: $eve-color-blue,
    success: $eve-color-green,
    warning: $eve-color-orange,
    danger: $eve-color-red
);
$eve-input-sizes: (
    small: 28px,
    normal: 36px,
    large: 48px
);
$eve-input-paddings: (
    small: $eve-spacing-tiny,
    normal: $eve-spacing-small,
    large: $eve-spacing-normal
);
$eve-input-font-sizes: (
    small: $eve-font-tiny,
    normal: $eve-font-small,
    large: $eve-font-normal
);

.eve-input {
    background: $eve-color-white;
    border: 1px solid $eve-color-dark-silver;
    outline: none;
    color: $eve-color-grey-black;
    width: 100%;
    max-width: 100%;
    vertical-align: middle;
    -webkit-appearance: none; // sass-lint:disable-line no-vendor-prefixes
    -moz-appearance: none; // sass-lint:disable-line no-vendor-prefixes
    font-family: inherit;
    box-sizing: border-box;

    &::placeholder {
        font-family: inherit;
        color: $eve-color-darker-silver;
    }

    &:focus {
        border-color: $eve-color-blue;
    }

    @each $eve-input-size in map-keys($eve-input-sizes) {
        $size: map-get($eve-input-sizes, $eve-input-size);
        $padding: map-get($eve-input-paddings, $eve-input-size);
        $font-size: map-get($eve-input-font-sizes, $eve-input-size);

        @if $eve-input-size == 'normal' {
            height: $size;
            line-height: $size;
            padding: 0 $padding;
            font-size: $font-size;
        } @else {
            &.is-#{$eve-input-size} {
                height: $size;
                line-height: $size;
                padding: 0 $padding;
                font-size: $font-size;
            }
        }

        &.is-rounded {
            border-radius: $size / 2;
        }
    }

    // @each $eve-input-color in map-keys($eve-input-colors) {
    //     &.is-#{$eve-input-color} {
    //         border-color: map-get($eve-input-colors, $eve-input-color);
    //     }
    // }

    &:disabled {
        background: $eve-color-dark-silver;
        border-color: $eve-color-dark-silver;
        color: $eve-color-darkest-silver;
        pointer-events: none;
    }
}

.eve-input-field {
    position: relative;
    display: flex;
    align-items: center;

    @each $eve-input-size in map-keys($eve-input-sizes) {
        $size: map-get($eve-input-sizes, $eve-input-size);
        $padding: map-get($eve-input-paddings, $eve-input-size);

        @if $eve-input-size == 'normal' {
            &.is-loading {
                &::after {
                    right: $padding;
                    width: $size / 2;
                    height: $size / 2;
                }

                .eve-input {
                    padding-right: ($size / 2) + ($padding * 2) - ($padding / 2);
                }
            }

            &.has-icon {
                i,
                svg {
                    left: $padding;
                }

                i {
                    font-size: $size / 2;
                }

                svg {
                    width: $size / 2;
                    height: $size / 2;
                }

                .eve-input {
                    padding-left: ($size / 2) + ($padding * 2) - ($padding / 2);
                }
            }
        } @else {
            &.is-#{$eve-input-size} {
                &.is-loading {
                    &::after {
                        right: $padding;
                        width: $size / 2;
                        height: $size / 2;
                    }

                    .eve-input {
                        padding-right: ($size / 2) + ($padding * 2) - ($padding / 2);
                    }
                }

                &.has-icon {
                    i,
                    svg {
                        left: $padding;
                    }

                    i {
                        font-size: $size / 2;
                    }

                    svg {
                        width: $size / 2;
                        height: $size / 2;
                    }

                    .eve-input {
                        padding-left: ($size / 2) + ($padding * 2) - ($padding / 2);
                    }
                }
            }
        }
    }

    &.is-loading {
        &::after {
            content: '';
            border-radius: 50%;
            border: 2px solid transparent;
            border-top-color: $eve-color-blue;
            border-right-color: $eve-color-blue;
            position: absolute;
            animation-name: eveButtonProgress;
            animation-fill-mode: forwards;
            animation-iteration-count: infinite;
            animation-duration: .5s;
            animation-timing-function: linear;
            box-sizing: border-box;
        }

        @keyframes eveButtonProgress {
            from {
                transform: rotate(0);
            }

            to {
                transform: rotate(360deg);
            }
        }
    }

    &.has-icon {
        i,
        svg {
            position: absolute;
        }

        i {
            color: $eve-color-dark-silver;
        }

        svg {
            fill: $eve-color-dark-silver;
        }
    }
}
